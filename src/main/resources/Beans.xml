<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">

    <!--@AspectJ 支持是可用的-->
    <aop:aspectj-autoproxy/>

    <!--使用常规类以及基于配置的 XML 来实现的-->
    <!--一个 aspect 是使用 元素声明的，支持的 bean 是使用 ref 属性引用的-->
    <!--<aop:config>-->
        <!--&lt;!&ndash;这里，“logging” 将被配置和依赖注入&ndash;&gt;-->
        <!--<aop:aspect id="log" ref="logging">-->
            <!--&lt;!&ndash;声明一个切入点(一组一个或多个连接点) &ndash;&gt;-->
            <!--<aop:pointcut id="selectAll"-->
                          <!--expression="execution(* com.tutorialspoint.*.*(..))"/>-->
            <!--&lt;!&ndash;声明建议&ndash;&gt;-->
            <!--<aop:before pointcut-ref="selectAll" method="beforeAdvice"/>-->
            <!--<aop:after pointcut-ref="selectAll" method="afterAdvice"/>-->
            <!--<aop:after-returning pointcut-ref="selectAll"-->
                                 <!--returning="retVal"-->
                                 <!--method="afterReturningAdvice"/>-->
            <!--<aop:after-throwing pointcut-ref="selectAll"-->
                                <!--throwing="ex"-->
                                <!--method="AfterThrowingAdvice"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->

    <!-- Definition for student bean -->
    <bean id="student" class="com.tutorialspoint.Student">
        <property name="name"  value="Zara" />
        <property name="age"  value="11"/>
    </bean>

    <!-- Definition for logging aspect -->
    <bean id="logging" class="com.tutorialspoint.Logging"/>

    <!-- Initialization for data source -->
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/spring-demo"/>
        <property name="username" value="root"/>
        <property name="password" value="mysql123"/>
    </bean>

    <!-- Definition for studentJDBCTemplate bean -->
    <bean id="studentJDBCTemplate"
          class="com.dao.StudentJDBCTemplate">
        <property name="dataSource"  ref="dataSource" />
    </bean>
</beans>
