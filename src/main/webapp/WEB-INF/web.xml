<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/javaee"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

  <display-name>Archetype Created Web Application</display-name>

  <!--一个spring工程，默认的有两个配置文件，一个是我们上面提到的tomcat加载的applicationContext.xml。
  另一个默认的就是 (你在web.xml写的servlet-name)加上-servlet.xml （这里配置的servlet名称是下面的 dispatcher）-->
  <!-- Spring 集成Web环境的通用配置 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/spring-mvc.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <!--配置文件进行初始化上下文-->
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/spring-mvc.xml</param-value>
    </init-param>
    <!--当值为0或者大于0时，表示容器在应用启动时就加载并初始化这个servlet；正数的值越小，该servlet的优先级越高，应用启动时就越先加载。-->
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <!--表示哪些请求交给Spring Web MVC处理-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>
</web-app>
